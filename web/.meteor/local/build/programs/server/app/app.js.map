{"version":3,"sources":["meteor://ðŸ’»app/lib/collections/guestUpdates/collection.js","meteor://ðŸ’»app/lib/_helpers.js","meteor://ðŸ’»app/lib/constants.js","meteor://ðŸ’»app/server/publications.js","meteor://ðŸ’»app/server/router.js"],"names":[],"mappings":";;;;;;;;AAAA,eAAe,IAAI,MAAM,UAAV,CAAqB,cAArB,CAAf;;AAEA,IAAM,oBAAoB,IAAI,YAAJ,CAAiB;AACzC,OAAK,EAAE,MAAM,MAAR,EAAgB,OAAO,aAAa,KAAb,CAAmB,EAA1C,EADoC;AAEzC,SAAO,EAAE,MAAM,MAAR,EAFkC,E;AAGzC,OAAK,EAAE,MAAM,MAAR,EAHoC,E;AAIzC,UAAQ,EAAE,MAAM,MAAR,EAJiC,E;AAKzC,aAAW,EAAE,MAAM,IAAR;AAL8B,CAAjB,CAA1B;;AAQA,aAAa,YAAb,CAA0B,iBAA1B;;AAEA,aAAa,OAAb,GAAuB,EAAvB,qF;;;;;;;;;;;ACZA,UAAU,EAAV,iG;;;;;;;;;;;ACAA,YAAY,EAAZ,+F;;;;;;;;;;;;;;;;;;;;;;ACAA,OAAO,OAAP,CAAe,YAAM,CAEpB,CAFD;;AAIA,OAAO,OAAP,CAAe,kBAAf,EAAmC,YAAM;AACvC,SAAO,aAAa,IAAb,EAAP;AACD,CAFD,4G;;;;;;;;;;;ACJA,WAAW,GAAX,CAAe,MAAf,EAAuB,cAAvB,EAAuC,UAAC,GAAD,EAAM,GAAN,EAAW,IAAX,EAAoB;AAAA,kBAC1B,IAAI,IADsB;AAAA,MACjD,GADiD,aACjD,GADiD;AAAA,MAC5C,MAD4C,aAC5C,MAD4C;AAAA,MACpC,KADoC,aACpC,KADoC;;AAEzD,MAAM,YAAY,IAAI,IAAJ,CAAS,CAAC,IAAI,IAAJ,CAAS,SAAnB,CAAlB;;AAEA,MAAI,UAAU;AACZ,UAAM;AACJ,eAAS;AADL,KADM;AAIZ,UAAM;AAJM,GAAd;;AAOA,eAAa,MAAb,CACE,EAAE,QAAF;AACE,kBADF;AAEE,gBAFF;AAGE;AAHF,GADF,EAKK,UAAC,GAAD,EAAM,aAAN,EAAwB;AACzB,QAAI,GAAJ,EAAS;AACP,cAAQ,GAAR,oCAA6C,IAAI,OAAjD;AACA,gBAAU;AACR,cAAM;AACJ,mBAAS,IAAI;AADT,SADE;AAIR,cAAM;AAJE,OAAV;AAMD,KARD,MAQO;AACL,cAAQ,GAAR,CAAY,0CAAZ;AACD;AACJ,GAjBD;AAkBA,SAAO,WAAW,UAAX,CAAsB,GAAtB,EAA2B,OAA3B,CAAP;AACD,CA9BD,6G","file":"/app.js","sourcesContent":["GuestUpdates = new Mongo.Collection('guestUpdates');\n\nconst guestUpdateSchema = new SimpleSchema({\n  _id: { type: String, regEx: SimpleSchema.RegEx.Id },\n  value: { type: String },  // 'INC', or 'DEC'\n  age: { type: String }, // 'AGE_GROUP_1', 'AGE_GROUP_2', 'AGE_GROUP_3', 'AGE_GROUP_4', or 'AGE_GROUP_5'\n  gender: { type: String }, // 'GENDER_MALE' or 'GENDER_FEMALE'\n  timestamp: { type: Date },\n});\n\nGuestUpdates.attachSchema(guestUpdateSchema);\n\nGuestUpdates.methods = {};\n","Helpers = {};\n","Constants = {};\n","Meteor.startup(() => {\n  \n});\n\nMeteor.publish('GuestUpdates.all', () => {\n  return GuestUpdates.find();\n});\n","JsonRoutes.add('post', '/guestUpdate', (req, res, next) => {\n  const { age, gender, value } = req.body;\n  const timestamp = new Date(+req.body.timestamp);\n\n  let options = {\n    data: {\n      message: 'Success! guestUpdate has been registered',\n    },\n    code: 200,\n  };\n\n  GuestUpdates.insert(\n    { age,\n      gender,\n      value,\n      timestamp,\n    }, (err, guestUpdateId) => {\n      if (err) {\n        console.log(`Error on POST to guestUpdate: ${err.message}`);\n        options = {\n          data: {\n            message: err.message,\n          },\n          code: 500,\n        };\n      } else {\n        console.log('Success! guestUpdate has been registered');\n      }\n  });\n  return JsonRoutes.sendResult(res, options);\n});\n"]}