{"version":3,"sources":["meteor://ðŸ’»app/imports/components/todosList/todosList.html","meteor://ðŸ’»app/imports/components/todosList/todosList.js","meteor://ðŸ’»app/imports/api/tasks.js","meteor://ðŸ’»app/client/main.html.js","meteor://ðŸ’»app/client/main.js"],"names":[],"mappings":";;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oH;;;;;;;;;;;;ACdA,OAAO,OAAP,MAAoB,SAApB;AACA,OAAO,aAAP,MAA0B,gBAA1B;AACA,SAAS,KAAT,QAAsB,oBAAtB;;AAEA,OAAO,QAAP,MAAqB,kBAArB;;IAEM,a;AACJ,yBAAY,MAAZ,EAAoB;AAAA;;AAClB,WAAO,SAAP,CAAiB,IAAjB;;AAEA,SAAK,aAAL,GAAqB,KAArB;;AAEA,SAAK,OAAL,CAAa;AACX,WADW;AAAA,yBACH;AACN,cAAM,WAAW,EAAjB;;;AAGA,cAAI,KAAK,aAAL,CAAmB,eAAnB,CAAJ,EAAyC;AACvC,qBAAS,OAAT,GAAmB;AACjB,mBAAK;AADY,aAAnB;AAGD;;;AAGD,iBAAO,MAAM,IAAN,CAAW,QAAX,EAAqB;AAC1B,kBAAM;AACJ,yBAAW,CAAC;AADR;AADoB,WAArB,CAAP;AAKD;;AAjBU;AAAA;AAmBX,qBAnBW;AAAA,mCAmBO;AAChB,iBAAO,MAAM,IAAN,CAAW;AAChB,qBAAS;AACP,mBAAK;AADE;AADO,WAAX,EAIJ,KAJI,EAAP;AAKD;;AAzBU;AAAA;AAAA,KAAb;AA4BD;;0BAED,O;qBAAQ,O,EAAS;;AAEf,YAAM,MAAN,CAAa;AACX,cAAM,OADK;AAEX,mBAAW,IAAI,IAAJ;AAFA,OAAb;;;AAMA,WAAK,OAAL,GAAe,EAAf;AACD;;;;;0BAGD,U;wBAAW,I,EAAM;;AAEf,YAAM,MAAN,CAAa,KAAK,GAAlB,EAAuB;AACrB,cAAM;AACJ,mBAAS,CAAC,KAAK;AADX;AADe,OAAvB;AAKD;;;;;0BAED,U;wBAAW,I,EAAM;AACf,YAAM,MAAN,CAAa,KAAK,GAAlB;AACD;;;;;;;;AAIH,eAAe,QAAQ,MAAR,CAAe,WAAf,EAA4B,CACzC,aADyC,CAA5B,EAGZ,SAHY,CAGF,WAHE,EAGW;AACtB,eAAa,6CADS;AAEtB,cAAY,CAAC,QAAD,EAAW,aAAX;AAFU,CAHX,CAAf,kH;;;;;;;;;;;ACrEA,SAAS,KAAT,QAAsB,cAAtB;;AAEA,OAAO,IAAM,QAAQ,IAAI,MAAM,UAAV,CAAqB,OAArB,CAAd;;AAEP,IAAI,OAAO,QAAX,EAAqB;;;;;;;AAOpB;;AAED,OAAO,OAAP,CAAe;;;;;;;;;;AAAA,CAAf,mH;;;;;;;;;;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mH;;;;;;;;;;;ACPA,OAAO,OAAP,MAAoB,SAApB;AACA,OAAO,aAAP,MAA0B,gBAA1B;;AAEA,OAAO,SAAP,MAAsB,2CAAtB;;AAEA,QAAQ,MAAR,CAAe,cAAf,EAA+B,CAC7B,aAD6B,EAE7B,UAAU,IAFmB,CAA/B,qD","file":"/app.js","sourcesContent":["\n      if (Meteor.isServer) return;\n\n      var templateUrl = \"/imports/components/todosList/todosList.html\";\n      var template = \"<header> <h1>Todo List ( {{$ctrl.incompleteCount}} )</h1> <label class=\\\"hide-completed\\\"> <input type=\\\"checkbox\\\" ng-model=\\\"$ctrl.hideCompleted\\\"> Hide Completed Tasks </label> <form class=\\\"new-task\\\" ng-submit=\\\"$ctrl.addTask($ctrl.newTask)\\\"> <input ng-model=\\\"$ctrl.newTask\\\" type=\\\"text\\\" name=\\\"text\\\" placeholder=\\\"Type to add new tasks\\\"> </form> </header> <ul> <li ng-repeat=\\\"task in $ctrl.tasks\\\" ng-class=\\\"{'checked': task.checked}\\\"> <button class=\\\"delete\\\" ng-click=\\\"$ctrl.removeTask(task)\\\">&times;</button> <input type=\\\"checkbox\\\" ng-checked=\\\"task.checked\\\" ng-click=\\\"$ctrl.setChecked(task)\\\" class=\\\"toggle-checked\\\"> <span class=\\\"text\\\"> {{task.text}} </span> </li></ul> \";\n\n      angular.module('angular-templates')\n        .run(['$templateCache', function($templateCache) {\n          $templateCache.put(templateUrl, template);\n        }]);\n\n      module.exports = {};\n      module.exports.__esModule = true;\n      module.exports.default = templateUrl;\n    ","import angular from 'angular';\nimport angularMeteor from 'angular-meteor';\nimport { Tasks } from '../../api/tasks.js';\n\nimport template from './todosList.html';\n\nclass TodosListCtrl {\n  constructor($scope) {\n    $scope.viewModel(this);\n\n    this.hideCompleted = false;\n\n    this.helpers({\n      tasks() {\n        const selector = {};\n\n        // If hide completed is checked, filter tasks\n        if (this.getReactively('hideCompleted')) {\n          selector.checked = {\n            $ne: true,\n          };\n        }\n\n        // Show newest tasks at the top\n        return Tasks.find(selector, {\n          sort: {\n            createdAt: -1,\n          },\n        });\n      },\n\n      incompleteCount() {\n        return Tasks.find({\n          checked: {\n            $ne: true,\n          },\n        }).count();\n      },\n\n    });\n  }\n\n  addTask(newTask) {\n    // Insert a task into the collection\n    Tasks.insert({\n      text: newTask,\n      createdAt: new Date(),\n    });\n\n    // Clear form\n    this.newTask = '';\n  }\n\n\n  setChecked(task) {\n    // Set the checked property to the opposite of its current value\n    Tasks.update(task._id, {\n      $set: {\n        checked: !task.checked,\n      },\n    });\n  }\n\n  removeTask(task) {\n    Tasks.remove(task._id);\n  }\n\n}\n\nexport default angular.module('todosList', [\n  angularMeteor,\n])\n  .component('todosList', {\n    templateUrl: 'imports/components/todosList/todosList.html',\n    controller: ['$scope', TodosListCtrl],\n  });\n","import { Mongo } from 'meteor/mongo';\n\nexport const Tasks = new Mongo.Collection('tasks');\n\nif (Meteor.isServer) {\n  // This code only runs on the server\n\n  // e.g.:\n  // Meteor.publish('tasks', function tasksPublication() {\n  //  return Tasks.find();\n  // });\n}\n\nMeteor.methods({\n  // e.g.:\n\n  // 'tasks.insert' (text) {\n  //\n  // },\n\n  // 'tasks.remove' (taskId) {\n  //\n  // }\n});\n","\n            Meteor.startup(function() {\n              var attrs = {};\n              for (var prop in attrs) {\n                document.body.setAttribute(prop, attrs[prop]);\n              }\n            });\n          ","import angular from 'angular';\nimport angularMeteor from 'angular-meteor';\n\nimport todosList from '../imports/components/todosList/todosList';\n\nangular.module('simple-todos', [\n  angularMeteor,\n  todosList.name,\n]);\n"]}